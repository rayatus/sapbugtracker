<?xml version="1.0" encoding="utf-16"?>
<CLAS CLSNAME="ZCL_IM_BUGTRACKER" VERSION="1" LANGU="E" DESCRIPT="Imp. class for BAdI imp. ZBUGTRACKER" UUID="080027EE3DEB1ED08D94E772B55BAF74" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="BCUSER" CREATEDON="20110210" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" FIXPT="X" UNICODE="X" R3RELEASE="702" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 ">
 <implementing CLSNAME="ZCL_IM_BUGTRACKER" REFCLSNAME="IF_EX_CTS_REQUEST_CHECK" VERSION="1" EXPOSURE="2" STATE="1" AUTHOR="BCUSER" CREATEDON="20110210" CHANGEDON="00000000" RELTYPE="1" EDITORDER="0 "/>
 <publicSection>class ZCL_IM_BUGTRACKER definition
  public
  final
  create public .

public section.
*&quot;* public components of class ZCL_IM_BUGTRACKER
*&quot;* do not include other source files here!!!

  interfaces IF_EX_CTS_REQUEST_CHECK .</publicSection>
 <protectedSection>protected section.
*&quot;* protected components of class ZCL_IM_BUGTRACKER
*&quot;* do not include other source files here!!!</protectedSection>
 <privateSection>private section.
*&quot;* private components of class ZCL_IM_BUGTRACKER
*&quot;* do not include other source files here!!!</privateSection>
 <localImplementation>private section.
*&quot;* private components of class ZCL_IM_BUGTRACKER
*&quot;* do not include other source files here!!!</localImplementation>
 <localTypes>private section.
*&quot;* private components of class ZCL_IM_BUGTRACKER
*&quot;* do not include other source files here!!!</localTypes>
 <localMacros>private section.
*&quot;* private components of class ZCL_IM_BUGTRACKER
*&quot;* do not include other source files here!!!</localMacros>
 <interfaceMethod CLSNAME="ZCL_IM_BUGTRACKER" CPDNAME="IF_EX_CTS_REQUEST_CHECK~CHECK_BEFORE_ADD_OBJECTS">
  <source>method IF_EX_CTS_REQUEST_CHECK~CHECK_BEFORE_ADD_OBJECTS.
endmethod.</source>
 </interfaceMethod>
 <interfaceMethod CLSNAME="ZCL_IM_BUGTRACKER" CPDNAME="IF_EX_CTS_REQUEST_CHECK~CHECK_BEFORE_CHANGING_OWNER">
  <source>method IF_EX_CTS_REQUEST_CHECK~CHECK_BEFORE_CHANGING_OWNER.
endmethod.</source>
 </interfaceMethod>
 <interfaceMethod CLSNAME="ZCL_IM_BUGTRACKER" CPDNAME="IF_EX_CTS_REQUEST_CHECK~CHECK_BEFORE_CREATION">
  <source>method IF_EX_CTS_REQUEST_CHECK~CHECK_BEFORE_CREATION.
endmethod.</source>
 </interfaceMethod>
 <interfaceMethod CLSNAME="ZCL_IM_BUGTRACKER" CPDNAME="IF_EX_CTS_REQUEST_CHECK~CHECK_BEFORE_RELEASE">
  <source>METHOD if_ex_cts_request_check~check_before_release.
  DATA: l_is_mandatory      TYPE zbt_trreleased_bugid,
        l_screen_attributes TYPE zbt_screen_attributes,
        l_cancel            TYPE flag,
        o_popup             TYPE REF TO zcl_tr_bug_ctrl,
        o_tr                TYPE REF TO zcl_transport,
        o_container         TYPE REF TO cl_gui_dialogbox_container.


  l_is_mandatory = zcl_system_config=&gt;is_bugid_mandatory_tr_released( ).

  IF l_is_mandatory &lt;&gt; &apos;3&apos;.

    l_screen_attributes-top    = 1.
    l_screen_attributes-left   = 1.
    l_screen_attributes-bottom = 13.
    l_screen_attributes-rigth  = 100.
    l_screen_attributes-title  = &apos;SAPBugTracker: Link Bug to Transport Request.&apos;(001).

    IF type = &apos;K&apos; OR type = &apos;W&apos;. &quot;For custo and WB Requests
      IF NOT dialog IS INITIAL.
        TRY.
            CALL FUNCTION &apos;ZBT_ASK4_BUGID&apos;
              EXPORTING
                trkorr            = request
                screen_attributes = l_screen_attributes
              IMPORTING
                canceled_by_user  = l_cancel.
            IF NOT l_cancel IS INITIAL AND l_is_mandatory = &apos;1&apos;.
              MESSAGE &apos;Action canceled by user.&apos;(002) TYPE &apos;E&apos; RAISING cancel.
            ENDIF.
          CATCH zcx_not_found_exception .
            MESSAGE &apos;Transport Request does not exist.&apos;(003) TYPE &apos;E&apos; RAISING cancel.
        ENDTRY.
      ENDIF.
    ENDIF.
  ENDIF.
ENDMETHOD.</source>
 </interfaceMethod>
</CLAS>

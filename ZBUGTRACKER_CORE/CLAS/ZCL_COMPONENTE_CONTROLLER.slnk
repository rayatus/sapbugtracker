<?xml version="1.0" encoding="utf-16"?>
<CLAS CLSNAME="ZCL_COMPONENTE_CONTROLLER" VERSION="1" LANGU="E" DESCRIPT="Componente Controller" UUID="DF3B7D3A4E34DFF1928D080027E6C24E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="BCUSER" CREATEDON="20100329" CHANGEDBY="BCUSER" CHANGEDON="20101225" CHGDANYON="00000000" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="701" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 ">
 <publicSection>class ZCL_COMPONENTE_CONTROLLER definition
  public
  create public .

*&quot;* public components of class ZCL_COMPONENTE_CONTROLLER
*&quot;* do not include other source files here!!!
public section.

  class-methods ENTITY_TO_STRUCTURE
    importing
      !ENTITY type ref to ZCL_COMPONENTE
    returning
      value(STRUCTURE) type ZBT_COMPONT_TXT .
  class-methods EXIST
    importing
      !COMPONENTE type ref to ZCL_COMPONENTE
    returning
      value(RETURN) type FLAG .
  class-methods FIND_BY_KEY
    importing
      !ID type ZBT_ID_COMPONENTE
      !PRODUCTO type ref to ZCL_PRODUCTO
    returning
      value(RESULT) type ref to ZCL_COMPONENTE
    raising
      ZCX_NOT_FOUND_EXCEPTION .</publicSection>
 <protectedSection>*&quot;* protected components of class ZCL_COMPONENTE_CONTROLLER
*&quot;* do not include other source files here!!!
protected section.</protectedSection>
 <privateSection>*&quot;* private components of class ZCL_COMPONENTE_CONTROLLER
*&quot;* do not include other source files here!!!
private section.</privateSection>
 <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
 <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
 <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
 <method CLSNAME="ZCL_COMPONENTE_CONTROLLER" CMPNAME="ENTITY_TO_STRUCTURE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="0 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100927" CHANGEDON="20101225" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="701" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_COMPONENTE_CONTROLLER" CMPNAME="ENTITY_TO_STRUCTURE" SCONAME="ENTITY" VERSION="1" LANGU="E" DESCRIPT="Componente Entity" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100927" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_COMPONENTE"/>
  <parameter CLSNAME="ZCL_COMPONENTE_CONTROLLER" CMPNAME="ENTITY_TO_STRUCTURE" SCONAME="STRUCTURE" VERSION="1" LANGU="E" DESCRIPT="Descripciones Componente" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100927" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZBT_COMPONT_TXT"/>
  <source>METHOD entity_to_structure.

  structure-componente  = entity-&gt;get_id( ).
  structure-descripcion = entity-&gt;get_descripcion( ).

ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_COMPONENTE_CONTROLLER" CMPNAME="EXIST" VERSION="1" LANGU="E" DESCRIPT="Verifica si existe" EXPOSURE="2" STATE="1" EDITORDER="0 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100517" CHANGEDON="20101225" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="701" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_COMPONENTE_CONTROLLER" CMPNAME="EXIST" SCONAME="COMPONENTE" VERSION="1" LANGU="E" DESCRIPT="Componente Entity" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100517" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_COMPONENTE"/>
  <parameter CLSNAME="ZCL_COMPONENTE_CONTROLLER" CMPNAME="EXIST" SCONAME="RETURN" VERSION="1" LANGU="E" DESCRIPT="General Flag" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100517" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="FLAG"/>
  <source>method EXIST.
  DATA: l_id        TYPE zbt_compont-componente,
        lo_producto TYPE REF TO zcl_producto.

  TRY .
      l_id        = componente-&gt;get_id( ).
      lo_producto = componente-&gt;get_producto( ).
      zcl_componente_controller=&gt;find_by_key( id = l_id
                                              producto = lo_producto ).
      return = &apos;X&apos;.
    CATCH cx_root .
      return = space.
  ENDTRY.
endmethod.</source>
 </method>
 <method CLSNAME="ZCL_COMPONENTE_CONTROLLER" CMPNAME="FIND_BY_KEY" VERSION="1" LANGU="E" DESCRIPT="Busca un componente" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100329" CHANGEDBY="BCUSER" CHANGEDON="20101225" MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" R3RELEASE="701" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_COMPONENTE_CONTROLLER" CMPNAME="FIND_BY_KEY" SCONAME="ID" VERSION="1" LANGU="E" DESCRIPT="Componente" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100329" CHANGEDBY="BCUSER" CHANGEDON="20100517" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZBT_ID_COMPONENTE"/>
  <parameter CLSNAME="ZCL_COMPONENTE_CONTROLLER" CMPNAME="FIND_BY_KEY" SCONAME="PRODUCTO" VERSION="1" LANGU="E" DESCRIPT="Producto Entity" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100329" CHANGEDBY="BCUSER" CHANGEDON="20100517" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_PRODUCTO"/>
  <parameter CLSNAME="ZCL_COMPONENTE_CONTROLLER" CMPNAME="FIND_BY_KEY" SCONAME="RESULT" VERSION="1" LANGU="E" DESCRIPT="Componente Entity" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100329" CHANGEDBY="BCUSER" CHANGEDON="20100517" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_COMPONENTE"/>
  <exception CLSNAME="ZCL_COMPONENTE_CONTROLLER" CMPNAME="FIND_BY_KEY" SCONAME="ZCX_NOT_FOUND_EXCEPTION" VERSION="1" LANGU="E" DESCRIPT="Not Found" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100329" CHANGEDBY="BCUSER" CHANGEDON="20100517"/>
  <source>method FIND_BY_KEY.

  DATA: lo_agent        TYPE REF TO zca_componente_persist,
        lo_persist      TYPE REF TO zcl_componente_persist,
        lo_exception    TYPE REF TO cx_root,
        l_id_producto   TYPE zbt_producto-producto.

  l_id_producto = producto-&gt;get_id( ).
  lo_agent      = zca_componente_persist=&gt;agent.
  TRY.
      CALL METHOD lo_agent-&gt;get_persistent
        EXPORTING
          i_producto   = l_id_producto
          i_componente = id
        RECEIVING
          result       = lo_persist.

*     Mapeamos contra un entity
      CREATE OBJECT result
        EXPORTING
          producto   = producto
          componente = id.

    CATCH cx_os_object_not_found INTO lo_exception.
      RAISE EXCEPTION TYPE zcx_not_found_exception
        EXPORTING
          textid   = zcx_not_found_exception=&gt;zcx_not_found_exception
          previous = lo_exception.
  ENDTRY.




endmethod.</source>
 </method>
</CLAS>

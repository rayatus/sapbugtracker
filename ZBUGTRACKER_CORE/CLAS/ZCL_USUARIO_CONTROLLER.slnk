<?xml version="1.0" encoding="utf-16"?>
<CLAS CLSNAME="ZCL_USUARIO_CONTROLLER" VERSION="1" LANGU="E" DESCRIPT="Usuario Controller" UUID="DF3B7A12990D1FF1928D080027E6C24E" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="BCUSER" CREATEDON="20100329" CHANGEDBY="BCUSER" CHANGEDON="20101225" CHGDANYON="00000000" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="701" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 ">
 <publicSection>class ZCL_USUARIO_CONTROLLER definition
  public
  create public .

*&quot;* public components of class ZCL_USUARIO_CONTROLLER
*&quot;* do not include other source files here!!!
public section.

  class-methods FIND_BY_KEY
    importing
      !ID type XUBNAME default SY-UNAME
    returning
      value(USUARIO) type ref to ZCL_USUARIO
    raising
      ZCX_NOT_FOUND_EXCEPTION .
  class-methods EXIST
    importing
      !USUARIO type ref to ZCL_USUARIO
    returning
      value(RETURN) type FLAG .</publicSection>
 <protectedSection>*&quot;* protected components of class ZCL_USUARIO_CONTROLLER
*&quot;* do not include other source files here!!!
protected section.</protectedSection>
 <privateSection>*&quot;* private components of class ZCL_USUARIO_CONTROLLER
*&quot;* do not include other source files here!!!
private section.</privateSection>
 <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
 <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
 <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
 <method CLSNAME="ZCL_USUARIO_CONTROLLER" CMPNAME="EXIST" VERSION="1" LANGU="E" DESCRIPT="Verifica si el usuario existe en la capa de persistencia" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100517" CHANGEDON="20101225" MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" R3RELEASE="701" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_USUARIO_CONTROLLER" CMPNAME="EXIST" SCONAME="USUARIO" VERSION="1" LANGU="E" DESCRIPT="Usuario entity" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100517" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_USUARIO"/>
  <parameter CLSNAME="ZCL_USUARIO_CONTROLLER" CMPNAME="EXIST" SCONAME="RETURN" VERSION="1" LANGU="E" DESCRIPT="General Flag" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100517" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="FLAG"/>
  <source>method EXIST.
  DATA: l_id TYPE xubname.

  l_id = usuario-&gt;get_id( ).

  TRY .
      zcl_usuario_controller=&gt;find_by_key( l_id ).
      return = &apos;X&apos;.
    CATCH cx_root.
      return = space.
  ENDTRY.


endmethod.</source>
 </method>
 <method CLSNAME="ZCL_USUARIO_CONTROLLER" CMPNAME="FIND_BY_KEY" VERSION="1" LANGU="E" DESCRIPT="Busca un usuario" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100329" CHANGEDBY="BCUSER" CHANGEDON="20101225" MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" R3RELEASE="701" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_USUARIO_CONTROLLER" CMPNAME="FIND_BY_KEY" SCONAME="ID" VERSION="1" LANGU="E" DESCRIPT="User Name in User Master Record" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100329" CHANGEDBY="BCUSER" CHANGEDON="20100517" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XUBNAME" PARVALUE="SY-UNAME"/>
  <parameter CLSNAME="ZCL_USUARIO_CONTROLLER" CMPNAME="FIND_BY_KEY" SCONAME="USUARIO" VERSION="1" LANGU="E" DESCRIPT="Usuario entity" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100329" CHANGEDBY="BCUSER" CHANGEDON="20100517" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_USUARIO"/>
  <exception CLSNAME="ZCL_USUARIO_CONTROLLER" CMPNAME="FIND_BY_KEY" SCONAME="ZCX_NOT_FOUND_EXCEPTION" VERSION="1" LANGU="E" DESCRIPT="Not Found" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100329" CHANGEDBY="BCUSER" CHANGEDON="20100517"/>
  <source>method FIND_BY_KEY.

  DATA: lo_agent        TYPE REF TO zca_usuario_persist,
        lo_persist      TYPE REF TO zcl_usuario_persist,
        lo_exception    TYPE REF TO cx_root,
        l_string        type string,
        l_developer     TYPE ZBT_IS_developer,
        l_reporter      TYPE ZBT_IS_reporter,
        l_tester        TYPE ZBT_IS_TESTER,
        l_assigned      TYPE ZBT_IS_assigned,
        l_mail          type ZBT_EMAIL.

  lo_agent = zca_usuario_persist=&gt;agent.
  TRY.
      CALL METHOD lo_agent-&gt;get_persistent
        EXPORTING
          i_usuario = id
        RECEIVING
          result    = lo_persist.

      l_developer = lo_persist-&gt;get_is_developer( ).
      l_reporter  = lo_persist-&gt;get_is_reporter( ).
      l_tester    = lo_persist-&gt;get_is_tester( ).
      l_assigned  = lo_persist-&gt;get_is_assigned( ).
      l_mail      = lo_persist-&gt;get_mail( ).
*   Mapeamos contra un entity
      CREATE OBJECT usuario
        EXPORTING
          usuario = id.

      usuario-&gt;set_developer( l_developer ).
      usuario-&gt;set_reporter( l_reporter ).
      usuario-&gt;set_tester( l_tester ).
      usuario-&gt;set_assigned( l_assigned ).
      usuario-&gt;set_email( l_mail ).

    CATCH cx_os_object_not_found INTO lo_exception.
      l_string = id.
      RAISE EXCEPTION TYPE zcx_not_found_exception
        EXPORTING
          textid   = zcx_not_found_exception=&gt;zcx_not_found_exception
          object   = l_string
          previous = lo_exception.
  ENDTRY.


endmethod.</source>
 </method>
</CLAS>

<?xml version="1.0" encoding="utf-16"?>
<CLAS CLSNAME="ZCL_TR_BUG_CTRL" VERSION="1" LANGU="E" DESCRIPT="Allows link a TR to a Bug" UUID="080027EE3DEB1ED08D93A2BBF00DAF74" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="BCUSER" CREATEDON="20110209" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="702" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 ">
 <publicSection>CLASS zcl_tr_bug_ctrl DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
*&quot;* public components of class ZCL_TR_BUG_CTRL
*&quot;* do not include other source files here!!!

    METHODS constructor
      IMPORTING
        !tr TYPE REF TO zcl_transport
        !container TYPE REF TO cl_gui_container .
    METHODS ask_4_bugid .
    METHODS save_data
      RAISING
        zcx_transport_alv_ctrl_exc .</publicSection>
 <protectedSection>PROTECTED SECTION.
*&quot;* protected components of class ZCL_TR_BUG_CTRL
*&quot;* do not include other source files here!!!

    METHODS excluded_buttons
      RETURNING
        value(excluded_buttons) TYPE ui_functions .</protectedSection>
 <privateSection>PRIVATE SECTION.
*&quot;* private components of class ZCL_TR_BUG_CTRL
*&quot;* do not include other source files here!!!

    DATA o_grid TYPE REF TO cl_gui_alv_grid .
    DATA o_container TYPE REF TO cl_gui_container .
    DATA o_tr TYPE REF TO zcl_transport .
    DATA gt_bugs TYPE zbt_ask4_bugid_alv_tbl .

    METHODS get_tr_bugs .
    METHODS validate_data
      RAISING
        zcx_transport_alv_ctrl_exc .
    METHODS set_tr_bugs .</privateSection>
 <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations


*----------------------------------------------------------------------*
*       CLASS alv_grid_app DEFINITION
*----------------------------------------------------------------------*
* Catches ALV Events
*----------------------------------------------------------------------*
CLASS alv_grid_app DEFINITION.
  PUBLIC SECTION.
    METHODS   : on_data_changed FOR EVENT data_changed
                  OF cl_gui_alv_grid IMPORTING er_data_changed.
ENDCLASS.                    &quot;alv_grid_app DEFINITION
*----------------------------------------------------------------------*
*       CLASS alv_grid_app IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS alv_grid_app IMPLEMENTATION.

  METHOD on_data_changed.
    DATA: ls_good       TYPE lvc_s_modi,
          lo_producto   TYPE REF TO zcl_producto,
          lo_bug        TYPE REF TO zcl_bug,
          l_rowdata     TYPE zbt_ask4_bugid_alv_str.

    LOOP AT er_data_changed-&gt;mt_good_cells INTO ls_good.

      CALL METHOD er_data_changed-&gt;get_cell_value
        EXPORTING
          i_row_id    = ls_good-row_id
          i_fieldname = &apos;PRODUCTOID&apos;
        IMPORTING
          e_value     = l_rowdata-productoid.

      CASE ls_good-fieldname.
        WHEN &apos;PRODUCTOID&apos;.
          IF NOT l_rowdata-productoid IS INITIAL.
            lo_producto = zcl_producto_controller=&gt;find_by_key( l_rowdata-productoid ).
            l_rowdata-producto = lo_producto-&gt;get_descripcion( ).

            CALL METHOD er_data_changed-&gt;modify_cell
              EXPORTING
                i_row_id    = ls_good-row_id
                i_fieldname = &apos;PRODUCTO&apos;
                i_value     = l_rowdata-producto.
          ENDIF.

        WHEN &apos;BUGID&apos;.
          CALL METHOD er_data_changed-&gt;get_cell_value
            EXPORTING
              i_row_id    = ls_good-row_id
              i_fieldname = ls_good-fieldname
            IMPORTING
              e_value     = l_rowdata-bugid.

          IF NOT l_rowdata-bugid IS INITIAL.

            lo_producto = zcl_producto_controller=&gt;find_by_key( l_rowdata-productoid ).
            lo_bug = zcl_bug_controller=&gt;find_by_key( producto = lo_producto
                                                      id       = l_rowdata-bugid ).

            l_rowdata-resumen = lo_bug-&gt;get_resumen( ).

            CALL METHOD er_data_changed-&gt;modify_cell
              EXPORTING
                i_row_id    = ls_good-row_id
                i_fieldname = &apos;RESUMEN&apos;
                i_value     = l_rowdata-resumen.

          ENDIF.
      ENDCASE.
    ENDLOOP.

  ENDMETHOD.                    &quot;on_data_changed
ENDCLASS.                    &quot;alv_grid_app IMPLEMENTATION</localImplementation>
 <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
 <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
 <attribute CLSNAME="ZCL_TR_BUG_CTRL" CMPNAME="GT_BUGS" VERSION="1" LANGU="E" DESCRIPT="SAPBugTracker: Transport related to Bugs" EXPOSURE="0" STATE="1" EDITORDER="4 " AUTHOR="BCUSER" CREATEDON="20110307" CHANGEDBY="BCUSER" CHANGEDON="20110311" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZBT_ASK4_BUGID_ALV_TBL" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_TR_BUG_CTRL" CMPNAME="O_CONTAINER" VERSION="1" LANGU="E" DESCRIPT="Abstract Container for GUI Controls" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="BCUSER" CREATEDON="20110213" CHANGEDBY="BCUSER" CHANGEDON="20110311" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="CL_GUI_CONTAINER" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_TR_BUG_CTRL" CMPNAME="O_GRID" VERSION="1" LANGU="E" DESCRIPT="ALV List Viewer" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20110210" CHANGEDBY="BCUSER" CHANGEDON="20110311" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="CL_GUI_ALV_GRID" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_TR_BUG_CTRL" CMPNAME="O_TR" VERSION="1" LANGU="E" DESCRIPT="Transport Entity" EXPOSURE="0" STATE="1" EDITORDER="3 " AUTHOR="BCUSER" CREATEDON="20110213" CHANGEDBY="BCUSER" CHANGEDON="20110311" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_TRANSPORT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <method CLSNAME="ZCL_TR_BUG_CTRL" CMPNAME="ASK_4_BUGID" VERSION="1" LANGU="E" DESCRIPT="Shows a Popup asking for bug Id&apos;s" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20110209" CHANGEDBY="BCUSER" CHANGEDON="20110311" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <source>METHOD ask_4_bugid.
    FIELD-SYMBOLS: &lt;l_field&gt;  TYPE LINE OF lvc_t_fcat.

    DATA: l_f4                TYPE lvc_s_f4,
          lt_excluded_buttons TYPE ui_functions,
          lt_f4               TYPE lvc_t_f4,
          lt_fieldcatalog     TYPE lvc_t_fcat,
          lo_grid_app         TYPE REF TO alv_grid_app,
          l_layout            TYPE lvc_s_layo.

    CREATE OBJECT o_grid
      EXPORTING
        i_parent = o_container.

    CALL FUNCTION &apos;LVC_FIELDCATALOG_MERGE&apos;
      EXPORTING
        i_structure_name = &apos;ZBT_ASK4_BUGID_ALV_STR&apos;
      CHANGING
        ct_fieldcat      = lt_fieldcatalog[].

    LOOP AT lt_fieldcatalog ASSIGNING &lt;l_field&gt;.
      CASE &lt;l_field&gt;-fieldname.
        WHEN &apos;PRODUCTOID&apos; OR &apos;BUGID&apos;.
          &lt;l_field&gt;-edit       = &apos;X&apos;.
          &lt;l_field&gt;-f4availabl = &apos;X&apos;.

          l_f4-fieldname  = &lt;l_field&gt;-fieldname.
          l_f4-getbefore  = &apos;X&apos;.
          l_f4-chngeafter = &apos;X&apos;.
          INSERT l_f4 INTO TABLE lt_f4.

        WHEN OTHERS.
          &lt;l_field&gt;-edit = space.
      ENDCASE.
      &lt;l_field&gt;-col_opt = &apos;X&apos;.
    ENDLOOP.

    lt_excluded_buttons = excluded_buttons( ).

    CALL METHOD o_grid-&gt;set_table_for_first_display
      EXPORTING
        i_structure_name     = &apos;ZBT_ASK4_BUGID_ALV_STR&apos;
        is_layout            = l_layout
        it_toolbar_excluding = lt_excluded_buttons
      CHANGING
        it_fieldcatalog      = lt_fieldcatalog[]
        it_outtab            = gt_bugs[].

    o_grid-&gt;register_edit_event( i_event_id = cl_gui_alv_grid=&gt;mc_evt_enter ).
    CREATE OBJECT lo_grid_app.
    SET HANDLER lo_grid_app-&gt;on_data_changed FOR o_grid.

    CALL METHOD o_grid-&gt;register_f4_for_fields
      EXPORTING
        it_f4 = lt_f4.
  ENDMETHOD.                    &quot;ask_4_bugid</source>
 </method>
 <method CLSNAME="ZCL_TR_BUG_CTRL" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20110210" CHANGEDBY="BCUSER" CHANGEDON="20110311" MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_TR_BUG_CTRL" CMPNAME="CONSTRUCTOR" SCONAME="TR" VERSION="1" LANGU="E" DESCRIPT="Request/Task" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20110213" CHANGEDBY="BCUSER" CHANGEDON="20110311" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_TRANSPORT"/>
  <parameter CLSNAME="ZCL_TR_BUG_CTRL" CMPNAME="CONSTRUCTOR" SCONAME="CONTAINER" VERSION="1" LANGU="E" DESCRIPT="Abstract Container for GUI Controls" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20110213" CHANGEDBY="BCUSER" CHANGEDON="20110311" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_GUI_CONTAINER"/>
  <source>METHOD constructor.

    me-&gt;o_tr = tr.
    me-&gt;o_container = container.

    get_tr_bugs( ).

  ENDMETHOD.                    &quot;constructor</source>
 </method>
 <method CLSNAME="ZCL_TR_BUG_CTRL" CMPNAME="EXCLUDED_BUTTONS" VERSION="1" LANGU="E" DESCRIPT="Set Excluded buttons for ALVGrid" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20110221" CHANGEDBY="BCUSER" CHANGEDON="20110222" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_TR_BUG_CTRL" CMPNAME="EXCLUDED_BUTTONS" SCONAME="EXCLUDED_BUTTONS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20110221" CHANGEDBY="BCUSER" CHANGEDON="20110222" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="UI_FUNCTIONS"/>
  <source>METHOD excluded_buttons.

    DATA: l_button TYPE LINE OF ui_functions.

    l_button = cl_gui_alv_grid=&gt;mc_fc_loc_copy_row.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_detail.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_graph.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_loc_copy.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_loc_cut.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_loc_paste.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_loc_paste_new_row.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_loc_append_row.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_sum.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_subtot.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_views.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_auf.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_variant_admin.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_loc_undo.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_maximum.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_minimum.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_pc_file.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_print.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_print_back.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_print_prev.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_mb_variant.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_mb_subtot.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_mb_sum.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_load_variant.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_data_save.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_average.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_call_abc.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_call_chain.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_call_crbatch.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_call_crweb.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_call_lineitems.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_call_master_data.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_call_more.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_call_report.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_call_xint.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_call_xxl.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_data_save.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_delete_filter.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_expcrdata.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_expcrdesig.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_expcrtempl.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_expmdb.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_extend.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_info.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_html.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_to_office.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_to_rep_tree.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_send.
    INSERT l_button INTO TABLE excluded_buttons.
    l_button = cl_gui_alv_grid=&gt;mc_fc_word_processor.
    INSERT l_button INTO TABLE excluded_buttons.




  ENDMETHOD.                    &quot;excluded_buttons</source>
 </method>
 <method CLSNAME="ZCL_TR_BUG_CTRL" CMPNAME="GET_TR_BUGS" VERSION="1" LANGU="E" DESCRIPT="Retrieves related Bugs of a TransportRequest" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20110222" CHANGEDBY="BCUSER" CHANGEDON="20110311" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <source>METHOD get_tr_bugs.
    DATA: lt_result   TYPE zbt_bugs,
          lo_producto TYPE REF TO zcl_producto,
          l_result    TYPE LINE OF zbt_bugs,
          l_bug       TYPE zbt_ask4_bugid_alv_str.

    CLEAR gt_bugs[].
    IF o_tr IS BOUND.
      lt_result = o_tr-&gt;get_bugs( ).

      LOOP AT lt_result INTO l_result.
        l_bug-productoid  = l_result-producto_id.
        lo_producto       = l_result-oref-&gt;get_producto( ).
        l_bug-producto    = lo_producto-&gt;get_descripcion( ).
        l_bug-bugid       = l_result-bug_id.
        l_bug-resumen     = l_result-oref-&gt;get_resumen( ).
        INSERT l_bug INTO TABLE gt_bugs[].
      ENDLOOP.
    ENDIF.
  ENDMETHOD.                    &quot;get_tr_bugs</source>
 </method>
 <method CLSNAME="ZCL_TR_BUG_CTRL" CMPNAME="SAVE_DATA" VERSION="1" LANGU="E" DESCRIPT="Saves data into Persistence layer" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20110307" CHANGEDBY="BCUSER" CHANGEDON="20110311" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
  <exception CLSNAME="ZCL_TR_BUG_CTRL" CMPNAME="SAVE_DATA" SCONAME="ZCX_TRANSPORT_ALV_CTRL_EXC" VERSION="1" LANGU="E" DESCRIPT="Exception on Transport Controller" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20110307" CHANGEDBY="BCUSER" CHANGEDON="20110311"/>
  <source>METHOD save_data.
    DATA: lo_exception TYPE REF TO zcx_bugtracker_system.

    validate_data( ).

    TRY .
        set_tr_bugs( ).

        IF zcl_transport_controller=&gt;exist( me-&gt;o_tr ) IS INITIAL.
          zcl_transport_controller=&gt;create( me-&gt;o_tr ).
        ELSE.
          zcl_transport_controller=&gt;update( me-&gt;o_tr ).
        ENDIF.
*       Update SAP TR attributes
        zcl_transport_controller=&gt;update_tr_attributes( me-&gt;o_tr ).
      CATCH zcx_bugtracker_system INTO lo_exception.
        RAISE EXCEPTION TYPE zcx_transport_alv_ctrl_exc
          EXPORTING
            previous  = lo_exception
            transport = me-&gt;o_tr.
    ENDTRY.


  ENDMETHOD.                    &quot;save_data</source>
 </method>
 <method CLSNAME="ZCL_TR_BUG_CTRL" CMPNAME="SET_TR_BUGS" VERSION="1" LANGU="E" DESCRIPT="Sets Bugs related to a TransportRequest" EXPOSURE="0" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20110307" CHANGEDBY="BCUSER" CHANGEDON="20110311" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <source>METHOD set_tr_bugs.
    DATA: l_bug       TYPE LINE OF zbt_ask4_bugid_alv_tbl,
          lt_bugs     TYPE zbt_bugs,
          l_str_bug   TYPE LINE OF zbt_bugs,
          lo_bug      TYPE REF TO zcl_bug,
          lo_producto TYPE REF TO zcl_producto.

    lt_bugs[] = o_tr-&gt;get_bugs( ).

    LOOP AT me-&gt;gt_bugs INTO l_bug.
      TRY.
          lo_producto = zcl_producto_controller=&gt;find_by_key( l_bug-productoid ).
          lo_bug      = zcl_bug_controller=&gt;find_by_key( id       = l_bug-bugid
                                                         producto = lo_producto ).
          READ TABLE lt_bugs WITH KEY producto_id = l_bug-productoid
                                      bug_id      = l_bug-bugid
                                      TRANSPORTING NO FIELDS.
          IF NOT sy-subrc IS INITIAL.
            o_tr-&gt;add_bug( lo_bug ).
          ENDIF.
        CATCH zcx_not_found_exception.

      ENDTRY.
    ENDLOOP.

    LOOP AT lt_bugs INTO l_str_bug.
      READ TABLE gt_bugs WITH KEY productoid = l_str_bug-producto_id
                              bugid          = l_str_bug-bug_id
                              TRANSPORTING NO FIELDS.
      IF NOT sy-subrc IS INITIAL.
        o_tr-&gt;remove_bug( l_str_bug-oref ).
      ENDIF.
    ENDLOOP.

  ENDMETHOD.                    &quot;set_tr_bugs</source>
 </method>
 <method CLSNAME="ZCL_TR_BUG_CTRL" CMPNAME="VALIDATE_DATA" VERSION="1" LANGU="E" DESCRIPT="Validates Data before saving" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20110307" CHANGEDBY="BCUSER" CHANGEDON="20110311" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
  <exception CLSNAME="ZCL_TR_BUG_CTRL" CMPNAME="VALIDATE_DATA" SCONAME="ZCX_TRANSPORT_ALV_CTRL_EXC" VERSION="1" LANGU="E" DESCRIPT="Exception on Transport Controller" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20110307" CHANGEDBY="BCUSER" CHANGEDON="20110311"/>
  <source>METHOD validate_data.

    o_grid-&gt;check_changed_data( ).

    IF me-&gt;gt_bugs[] IS INITIAL.
      RAISE EXCEPTION TYPE zcx_transport_alv_ctrl_exc
        EXPORTING
          textid    = zcx_transport_alv_ctrl_exc=&gt;bugs_are_mandatory
          transport = me-&gt;o_tr.
    ENDIF.

  ENDMETHOD.                    &quot;validate_data</source>
 </method>
</CLAS>
